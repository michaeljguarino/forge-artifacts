virtualService:
  enabled: true
  gateway: ""

kiali-server:
  enabled: true
  auth:
    strategy: token
    openid:
      disable_rbac: true
      authentication_timeout: 300
      username_claim: email
      scopes:
      - openid
      - profile
  istio_namespace: istio
  server:
    observability:
      tracing:
        collector_type: otel
        sampling_rate: 1.0
        otel:
          protocol: http
    web_port: 443
    web_schema: https
    web_root: /
  # api:
  #   namespaces:
  #     exclude:
  #     - istio-operator
  #     - kube-.*
  #     - openshift.*
  #     - ibm.*
  deployment:
    pod_annotations:
      proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }' # TODO: remove once https://github.com/kiali/kiali/issues/6598 is resolved
  #   override_ingress_yaml:
  #     metadata:
  #       annotations:
  #           kubernetes.io/tls-acme: "true"
  #           kubernetes.io/ingress.class: "nginx"
  #           cert-manager.io/cluster-issuer: letsencrypt-prod
  #           nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
  #           nginx.ingress.kubernetes.io/use-regex: "true"
  #     spec:
  #       tls:
  #       - hosts:
  #         - kiali.kubeflow-aws.com
  #         secretName: kiali-tls
  #       rules:
  #       - host: kiali.kubeflow-aws.com
  #         http:
  #           paths:
  #           - path: /.*
  #             pathType: Prefix
  #             backend:
  #               service:
  #                 name: kiali
  #                 port:
  #                   name: http
  istio_labels:
    app_label_name: "app.kubernetes.io/name"
    version_label_name: "app.kubernetes.io/version"
  external_services:
    istio:
      root_namespace: istio
      component_status:
        enabled: true
        components:
        - app_label: istiod
          is_core: true
        - app_label: istio-ingress
          is_core: true
          is_proxy: true
          namespace: istio-ingress
    prometheus:
      url: http://monitoring-prometheus.monitoring:9090
    tracing:
      enabled: false
    #   use_grpc: false # we would actually want this to be true, but it doesn't work currently
      # in_cluster_url: http://grafana-tempo-tempo-distributed-query-frontend.grafana-tempo:16686
    grafana:
      enabled: false
      auth:
        type: basic # TODO: don't use admin password for Kiali to access grafana in values.yaml.tpl
      dashboards:
      - name: "Istio Mesh Dashboard"
      - name: "Istio Control Plane Dashboard"
      - name: "Istio Performance Dashboard"
      - name: "Istio Wasm Extension Dashboard"
      - name: "Istio Service Dashboard"
        variables:
          namespace: var-namespace
          service: var-service
      - name: "Istio Workload Dashboard"
        variables:
          namespace: var-namespace
          service: var-service
      - name: "Kubernetes / API server"
        variables:
          var-datasource: default
          var-cluster: ''
          var-instance: All

monitoring:
  enabled: false # with Istio we should have Istio scrape the pod
