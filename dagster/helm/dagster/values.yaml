global:
  serviceAccountName: dagster

postgres:
  team: plural
  user: dagster
  dbName: dagster
  ownerChart: dagster
  password: REPLACE_ME
  infix: ""

oidcProxy:
  enabled: false

dagster:
  dagsterDaemon:
    image:
      repository: dkr.plural.sh/dagster/dagster/dagster-celery-k8s
      tag: 1.1.18
    resources:
      requests:
        cpu: 15m
        memory: 156Mi
      limits:
        memory: 256Mi
  dagit:
    image:
      repository: dkr.plural.sh/dagster/dagster/dagster-celery-k8s
      tag: 1.1.18
    resources:
      requests:
        cpu: 25m
        memory: 180Mi
      limits:
        memory: 256Mi
  busybox:
    image:
      repository: dkr.plural.sh/dagster/library/busybox
      tag: "1.28.0"
  pipelineRun:
    image:
      repository: dkr.plural.sh/dagster/dagster/user-code-example
      tag: 1.1.18

  ingress:
    enabled: true
    dagit:
      tls:
        enabled: true
        secretName: dagster-tls
    annotations:
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      # Extend timeout to allow long running queries.
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
      nginx.ingress.kubernetes.io/use-regex: "true"

  runLauncher:
    type: K8sRunLauncher
    config:
      celeryK8sRunLauncher:
        image:
          repository: dkr.plural.sh/dagster/dagster/dagster-celery-k8s
          tag: 1.1.18

  postgresql:
    enabled: false
    # image is still used for checks if the db is ready
    image:
      repository: dkr.plural.sh/dagster/library/postgres
      tag: 9.6.24
    postgresqlHost: plural-dagster
    postgresqlUsername: dagster
    postgresqlDatabase: dagster
    postgresqlParams:
      sslmode: require

  dagster-user-deployments:
    enabled: true
    deployments:
      - name: "k8s-example-user-code-1"
        image:
          repository: dkr.plural.sh/dagster/dagster/user-code-example
          tag: 1.1.18
          pullPolicy: Always
        resources:
          requests:
            cpu: 20m
            memory: 100Mi
          limits:
            memory: 160Mi
        dagsterApiGrpcArgs:
          - "--python-file"
          - "/example_project/example_repo/repo.py"
        port: 3030
        envSecrets:
          - name: dagster-aws-env
