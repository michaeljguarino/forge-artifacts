apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "directpv.fullname" . }}
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    {{- include "directpv.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      {{- include "directpv-deployment.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.controller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "directpv-deployment.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "directpv.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      containers:
        - name: direct-csi
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          args:
            - -v=3
            - --identity=direct-csi-min-io
            - --endpoint=$(CSI_ENDPOINT)
            - --conversion-healthz-url=https://direct-csi-min-io.{{ .Release.Namespace }}.svc:30443/healthz
            - --controller
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          ports:
            - name: validatinghook
              containerPort: 20443
              protocol: TCP
            - name: healthz
              containerPort: 9898
              protocol: TCP
            - name: convwebhook
              containerPort: 30443
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: convwebhook
              scheme: HTTPS
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /csi
              mountPropagation: None
              name: socket-dir
            - mountPath: /etc/conversion/CAs
              mountPropagation: None
              name: conversioncacert
            - mountPath: /etc/conversion/certs
              mountPropagation: None
              name: conversionkeypair
            {{- if .Values.controller.validatingWebhook.enabled }}
            - mountPath: /etc/admission/certs
              mountPropagation: None
              name: admission-webhook-certs
            {{- end }}
        - name: csi-provisioner
          securityContext:
            {{- toYaml .Values.controller.csiProvisioner.securityContext | nindent 12 }}
          image: "{{ .Values.controller.csiProvisioner.image.repository }}:{{ .Values.controller.csiProvisioner.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.csiProvisioner.image.pullPolicy }}
          args:
            - --v=3
            - --timeout=300s
            - --csi-address=$(CSI_ENDPOINT)
            - --leader-election
            - --feature-gates=Topology=true
            - --strict-topology
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          resources:
            {{- toYaml .Values.controller.csiProvisioner.resources | nindent 12 }}
          terminationMessagePath: /var/log/controller-provisioner-termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /csi
              mountPropagation: None
              name: socket-dir
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/direct-csi-min-io-controller
            type: DirectoryOrCreate
          name: socket-dir
        - name: conversioncacert
          secret:
            secretName: conversioncacert
        - name: conversionkeypair
          secret:
            secretName: conversionkeypair
        {{- if .Values.controller.validatingWebhook.enabled }}
        - name: admission-webhook-certs
          secret:
            secretName: validationwebhookcerts
        {{- end }}
