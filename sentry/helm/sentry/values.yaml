runbook:
  sentry:
    description: "Runbook for Sentry"
    labels: "{{ include \"sentry-plural.labels\" $ }}"
    runbookName: "sentry"
    components:
      billingMetricsConsumer:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-billing-metrics-consumer"
        kind: deployment
        path: sentry.sentry.billingMetricsConsumer
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-billing-metrics-consumer-.*"
      cron:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-cron"
        kind: deployment
        path: sentry.sentry.cron
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-cron-.*"
      ingestConsumer:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-ingest-consumer"
        kind: deployment
        path: sentry.sentry.ingestConsumer
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-ingest-consumer-.*"
      ingestMetricsConsumerPerf:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-ingest-metrics-consumer-perf"
        kind: deployment
        path: sentry.sentry.ingestMetricsConsumerPerf
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-ingest-metrics-consumer-perf-.*"
      ingestMetricsConsumerRh:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-ingest-metrics-consumer-rh"
        kind: deployment
        path: sentry.sentry.ingestMetricsConsumerRh
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-ingest-metrics-consumer-rh-.*"
      ingestReplayRecordings:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-ingest-replay-recordings"
        kind: deployment
        path: sentry.sentry.ingestReplayRecordings
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-ingest-replay-recordings-.*"
      postProcessForwardErrors:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-post-process-forward-errors"
        kind: deployment
        path: sentry.sentry.postProcessForwardErrors
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-post-process-forward-errors-.*"
      postProcessForwardTransactions:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-post-process-forward-transactions"
        kind: deployment
        path: sentry.sentry.postProcessForwardTransactions
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-post-process-forward-transactions-.*"
      subscriptionConsumerEvents:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-subscription-consumer-events"
        kind: deployment
        path: sentry.sentry.subscriptionConsumerEvents
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-subscription-consumer-events-.*"
      subscriptionConsumerSessions:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-subscription-consumer-sessions"
        kind: deployment
        path: sentry.sentry.subscriptionConsumerSessions
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-subscription-consumer-sessions-.*"
      subscriptionConsumerTransactions:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-subscription-consumer-transactions"
        kind: deployment
        path: sentry.sentry.subscriptionConsumerTransactions
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-subscription-consumer-transactions-.*"
      web:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-web"
        kind: deployment
        path: sentry.sentry.web
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-web-.*"
      worker:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-worker"
        kind: deployment
        path: sentry.sentry.worker
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-worker-.*"
      symbolicatorapi:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-symbolicator-api"
        kind: deployment
        path: sentry.symbolicator.api
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-symbolicator-api-.*"
  snuba:
    description: "Runbook for Snuba components of Sentry"
    labels: "{{ include \"sentry-plural.labels\" $ }}"
    runbookName: "snuba-sentry"
    components:
      consumer:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-consumer"
        kind: deployment
        path: sentry.snuba.consumer
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-consumer-.*"
      outcomesConsumer:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-outcomes-consumer"
        kind: deployment
        path: sentry.snuba.outcomesConsumer
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-outcomes-consumer-.*"
      replacer:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-replacer"
        kind: deployment
        path: sentry.snuba.replacer
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-replacer-.*"
      replaysConsumer:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-replays-consumer"
        kind: deployment
        path: sentry.snuba.replaysConsumer
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-replays-consumer-.*"
      sessionsConsumer:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-sessions-consumer"
        kind: deployment
        path: sentry.snuba.sessionsConsumer
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-sessions-consumer-.*"
      subscriptionConsumerEvents:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-subscription-consumer-events"
        kind: deployment
        path: sentry.snuba.subscriptionConsumerEvents
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-subscription-consumer-events-.*"
      subscriptionConsumerSessions:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-subscription-consumer-sessions"
        kind: deployment
        path: sentry.snuba.subscriptionConsumerSessions
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-subscription-consumer-sessions-.*"
      subscriptionConsumerTransactions:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-subscription-consumer-transactions"
        kind: deployment
        path: sentry.snuba.subscriptionConsumerTransactions
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-subscription-consumer-transactions-.*"
      transactionsConsumer:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-transactions-consumer"
        kind: deployment
        path: sentry.snuba.transactionsConsumer
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-transactions-consumer-.*"
      api:
        resourceNameTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry }}-snuba-api"
        kind: deployment
        path: sentry.snuba.api
        prometheus:
          podRegexTpl: "{{ include \"sentry.fullname\" $.Subcharts.sentry  }}-snuba-api-.*"

postgres:
  version: "15"
  enabled: true
  team: plural
  user: sentry
  dbName: sentry
  ownerChart: sentry

rabbitmq:
  vhostName: sentry
  cluster:
    name: rabbitmq
    namespace: rabbitmq 

sentry:
  asHook: false
  images:
    symbolicator:
      repository: dkr.plural.sh/sentry/getsentry/symbolicator
      tag: 23.6.1
    snuba:
      repository: dkr.plural.sh/sentry/getsentry/snuba
      tag: 23.6.1
    sentry:
      repository: dkr.plural.sh/sentry/getsentry/sentry
      tag: 23.6.1-plural3.1.1
    relay:
      repository: dkr.plural.sh/sentry/getsentry/relay
      tag: 23.6.1

  serviceAccount:
    enabled: true
    name: sentry

  externalPostgresql:
    host: plural-postgres-sentry
    port: 5432
    username: sentry
    existingSecret: sentry.plural-postgres-sentry.credentials.postgresql.acid.zalan.do
    existingSecretKey: password
    database: sentry
    sslMode: require

  postgresql:
    enabled: false
  
  kafka:
    enabled: false

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
    image:
      repository: gcr.io/pluralsh/prom/statsd-exporter
      tag: v0.23.1

  redis:
    enabled: false

  rabbitmq:
    enabled: false
    host: rabbitmq.rabbitmq
    vhost: sentry

  nginx:
    enabled: false

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
  sentry:
    existingSecret: sentry-system-secret
    existingSecretKey: key

    billingMetricsConsumer:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    cron:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    ingestConsumer:
      autoscaling:
        enabled: false
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    ingestMetricsConsumerPerf:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    ingestMetricsConsumerRh:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    ingestReplayRecordings:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    postProcessForwardErrors:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    postProcessForwardTransactions:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    subscriptionConsumerEvents:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    subscriptionConsumerSessions:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    subscriptionConsumerTransactions:
      resources:
        requests:
          cpu: 50m
          memory: 300Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    web:
      autoscaling:
        enabled: false
      resources:
        requests:
          cpu: 50m
          memory: 350Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    worker:
      autoscaling:
        enabled: false
      resources:
        requests:
          cpu: 50m
          memory: 750Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
  relay:
    resources:
      requests:
        cpu: 50m
        memory: 300Mi
    env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
  snuba:
    dbInitJob:
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@/sentry
    migrateJob:
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry

    consumer:
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    outcomesConsumer:
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    replacer:
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    replaysConsumer:
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    sessionsConsumer:
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    subscriptionConsumerEvents:
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    subscriptionConsumerSessions:
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    subscriptionConsumerTransactions:
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    transactionsConsumer:
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    api:
      autoscaling:
        enabled: false
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry

  symbolicator:
    api:
      resources:
        requests:
          cpu: 20m
          memory: 50Mi
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry


  zookeeper:
    enabled: false

  clickhouse:
    enabled: false
  externalClickhouse:
    host: service-sentry-clickhouse
    tcpPort: 9000
    httpPort: 8123
    username: sentry
    password: ""
    database: sentry
    clusterName: sentry
    singleNode: false

  externalRedis:
    host: redis-master.redis
    password: ""

  externalKafka:
    host: kafka-kafka-bootstrap.kafka

  hooks:
    activeDeadlineSeconds: 600
    dbCheck:
      image:
        repository: gcr.io/pluralsh/library/busybox
        tag: 1.36.0
      env: 
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry
    dbInit:
      env:
      - name: RABBITMQ_USER
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: username
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sentry-rabbitmq-user-credentials
            key: password
      - name: BROKER_URL
        value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASSWORD)@rabbitmq.rabbitmq:5672/sentry

clickhouse:
  enabled: true
  cluster: sentry
  database: sentry
  user: sentry
  password: change_me

  settings:
    merge_tree/allow_nullable_key: 1
    merge_tree/check_sample_column_is_correct: 0
  
  resources:
    requests:
      cpu: 150m
      memory: 300Mi
    limits:
      cpu: 500m
      memory: 1Gi
  postInstallationHook:
    enabled: true
    annotations:
      helm.sh/hook: post-install
      helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
      helm.sh/hook-weight: "4"
    initContainer:
      timeout: "180s"
    image:
      repository: curlimages/curl
      tag: 7.79.1
    command: ["sh", "-c"]
    args:
      - curl -Sv "${CLICKHOUSE_HOST}/?user=${CLICKHOUSE_USER}&password=${CLICKHOUSE_PASSWORD}" -d "SELECT * FROM information_schema.tables where table_schema = '{{ .Values.database }}'" && sleep 10
    envFrom:
      - secretRef:
          name: sentry-snuba-env
    env:
      - name: CLICKHOUSE_HOST
        value: service-sentry-clickhouse.sentry.svc.cluster.local:8123

kafkaTopic: # TODO: hack since the db init fails to create this topic. Remove in the future once it's fixed in snuba.
  enabled: true
  cluster: kafka
  namespace: kafka
