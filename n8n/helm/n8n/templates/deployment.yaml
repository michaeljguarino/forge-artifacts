apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "n8n.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /.n8n
              name: user-data
          ports:
            - name: http
              containerPort: 5678
              protocol: TCP
          {{- if .Values.smtp }}
          envFrom:
            - secretRef:
                name: n8n-smtp
          {{- end }}
          env:
            - name: "N8N_PORT"
              value: "5678"
            - name: DB_TYPE
              value: {{ .Values.database.type }}
            - name: DB_POSTGRESDB_DATABASE
              value: {{ .Values.postgres.dbName }}
            - name: DB_POSTGRESDB_HOST
              value: {{ .Values.database.host }}
            - name: DB_POSTGRESDB_PORT
              value: {{ .Values.database.port | quote }}
            - name: DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED
              value: "false"
            - name: WEBHOOK_URL
              value: {{ .Values.webhookUrl }}
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secret }}
                  key: username
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secret }}
                  key: password
            - name: N8N_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: n8n-encryption
                  key: N8N_ENCRYPTION_KEY
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: user-data
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
