# Default values for gitlab.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

rootPassword: CHANGEME

global:
  email:
    display_name: Gitlab
  smtp:
    password:
      secret: gitlab-smtp-password
      key: password
  psql:
    host: plural-gitlab
    password:
      secret: gitlab.plural-gitlab.credentials.postgresql.acid.zalan.do
      key: password
  busybox:
    image:
      repository: gcr.io/pluralsh/busybox
  initialRootPassword:
    secret: gitlab-root-pwd
    key: password
  rails:
    bootsnap:
      enabled: true
  minio:
    enabled: false
  ingress:
    class: nginx
    configureCertmanager: false
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
  serviceAccount:
    enabled: true
    create: true
    name: gitlab

railsConnection: {}
registryConnection: {}

postgres:
  replicas: 1
  storage:
    size: 50Gi
  resources: {}
  default:
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: '2'
        memory: 1Gi

gitlab:
  upgradeCheck:
    enabled: false
  postgresql:
    install: false
    postgresqlExtendedConf:
      max_connections: 100
    metrics:
      serviceMonitor:
        enabled: true
      image:
        registry: gcr.io
        repository: pluralsh/postgres-exporter
        tag: 0.8.0
  redis:
    image:
      registry: gcr.io
      repository: pluralsh/bitnami/redis
    metrics:
      image:
        registry: gcr.io
        repository: pluralsh/bitnami/redis-exporter
    resources:
      requests:
        cpu: 10m
        memory: 64Mi
  gitlab:
    kas:
      ingress:
        tls:
          secretName: gitlab-kas-tls
          enabled: true
    webservice:
      minReplicas: 1
      ingress:
        tls:
          secretName: gitlab-web-tls
          enabled: true
    sidekiq:
      minReplicas: 1
      resources:
        limits:
          memory: 1.5G
        requests:
          cpu: 50m
          memory: 625M
      pods:
      - name: all-in-1
        minReplicas: 1
        maxReplicas: 10
        hpa:
          targetAverageValue: 50
    gitlab-shell:
      minReplicas: 1
    toolbox:
      enabled: false
      backups:
        cron:
          enabled: false

  registry:
    hpa:
      minReplicas: 1
    ingress:
      tls:
        secretName: gitlab-registry-tls
        enabled: true
  certmanager:
    install: false
  nginx-ingress:
    enabled: false
  prometheus:
    install: false  
  gitlab-runner:
    image: gcr.io/pluralsh/gitlab/gitlab-runner:alpine-v14.0.0
    rbac:
      create: false
      serviceAccountName: gitlab-runner
    runners:
      cache:
        cachePath: 'plural-gitlab-runner'
        cacheShared: true
        s3ServerAddress: s3.amazonaws.com

      name: gitlab-plural-runner
      privileged: true
    
      config: |
        [[runners]]
          name = 'plural-gitlab-runner'
          [runners.feature_flags]
            FF_GITLAB_REGISTRY_HELPER_IMAGE = true
          [runners.kubernetes]
            image = 'ubuntu:18.04'
            privileged = true
            service_account = 'gitlab-runner'
            poll_timeout = 360
            cpu_request = 0.25
            memory_request = 250Mi
            [runners.kubernetes.affinity]
              [runners.kubernetes.affinity.node_affinity]
                [[runners.kubernetes.affinity.node_affinity.preferred_during_scheduling_ignored_during_execution]]
                  weight = 20
                  [runners.kubernetes.affinity.node_affinity.preferred_during_scheduling_ignored_during_execution.preference]
                    [[runners.kubernetes.affinity.node_affinity.preferred_during_scheduling_ignored_during_execution.preference.match_expressions]]
                      key = 'usage-intention'
                      operator = 'In'
                      values = ['ci']
          [[runners.kubernetes.volumes.empty_dir]]
            name = 'docker-certs'
            mount_path = '/certs/client'
            medium = 'Memory'

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: gitlab-runner

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
