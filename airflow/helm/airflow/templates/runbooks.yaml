apiVersion: platform.plural.sh/v1alpha1
kind: Runbook
metadata:
  name: scaling-manual
  labels:
    platform.plural.sh/pinned: 'true'
{{ include "airflow.labels" . | indent 4 }}
spec:
  name: Airflow Scaling
  description: overview of how to optimally scale your airflow cluster
  display: |-
{{ println "<root gap='medium'>" | indent 4 }}
{{- if .Values.airflow.workers.enabled }}
{{ .Files.Get "runbooks/scaling-manual-worker.xml" | indent 4 }}
{{- end }}
{{ .Files.Get "runbooks/scaling-manual-webserver.xml" | indent 4 }}
{{ println "</root>" | indent 4 }}
  datasources:
  {{- if .Values.airflow.workers.enabled }}
  - name: worker-cpu
    type: prometheus
    prometheus:
      format: cpu
      legend: $pod
      query: sum(rate(container_cpu_usage_seconds_total{namespace="{{ .Release.Namespace }}",pod=~"airflow-worker-[0-9]+"}[5m])) by (pod)
  - name: worker-memory
    type: prometheus
    prometheus:
      format: memory
      legend: $pod
      query: sum(container_memory_working_set_bytes{namespace="{{ .Release.Namespace }}",pod=~"airflow-worker-[0-9]+"}) by (pod)
  {{- end }}
  - name: web-cpu
    type: prometheus
    prometheus:
      format: cpu
      legend: $pod
      query: sum(rate(container_cpu_usage_seconds_total{namespace="{{ .Release.Namespace }}",pod=~"airflow-web-[a-z0-9]+-[a-z0-9]+"}[5m])) by (pod)
  - name: web-memory
    type: prometheus
    prometheus:
      format: memory
      legend: $pod
      query: sum(container_memory_working_set_bytes{namespace="{{ .Release.Namespace }}",pod=~"airflow-web-[a-z0-9]+-[a-z0-9]+"}) by (pod)
  {{- if .Values.airflow.workers.enabled }}
  - name: worker
    type: kubernetes
    kubernetes:
      resource: statefulset
      name: airflow-worker
  {{- end }}
  - name: web
    type: kubernetes
    kubernetes:
      resource: deployment
      name: airflow-web
  - name: nodes
    type: nodes
  actions:
  - name: scale
    action: config
    redirectTo: '/'
    configuration:
      updates:
      - path: 
        - airflow
        - airflow
        - web
        - resources
        - requests
        - cpu
        valueFrom: web-cpu
      - path:
        - airflow
        - airflow
        - web
        - resources
        - requests
        - memory
        valueFrom: web-memory
      {{- if .Values.airflow.workers.enabled }}
      - path: 
        - airflow
        - airflow
        - workers
        - resources
        - requests
        - cpu
        valueFrom: worker-cpu
      - path:
        - airflow
        - airflow
        - workers
        - resources
        - requests
        - memory
        valueFrom: worker-memory
      {{- end }}
{{- if .Values.postgres.enabled }}
---
apiVersion: platform.plural.sh/v1alpha1
kind: Runbook
metadata:
  name: db-scaling
  labels:
    platform.plural.sh/pinned: 'true'
{{ include "airflow.labels" . | indent 4 }}
spec:
  name: Postgres Scaling
  description: overview of how to accurately scale airflow's postgres instance
  alerts:
  - name: AirflowPostgresCPU
  - name: AirflowPostgresMEM
  display: |-
{{ .Files.Get "runbooks/db-scaling.xml" | indent 4 }}
  datasources:
  - name: cpu
    type: prometheus
    prometheus:
      format: cpu
      legend: $pod
      query: sum(rate(container_cpu_usage_seconds_total{namespace="{{ .Release.Namespace }}",pod=~"plural-airflow-[0-9]+"}[5m])) by (pod)
  - name: memory
    type: prometheus
    prometheus:
      format: memory
      legend: $pod
      query: sum(container_memory_working_set_bytes{namespace="{{ .Release.Namespace }}",pod=~"plural-airflow-[0-9]+"}) by (pod)
  - name: statefulset
    type: kubernetes
    kubernetes:
      resource: statefulset
      name: plural-airflow
  - name: volume
    type: prometheus
    prometheus:
      format: none
      legend: $persistentvolumeclaim
      query: (kubelet_volume_stats_capacity_bytes{namespace="{{ .Release.Namespace }}", persistentvolumeclaim=~"pgdata-plural-airflow-.*"} - kubelet_volume_stats_available_bytes{namespace="{{ .Release.Namespace }}", persistentvolumeclaim=~"pgdata-plural-airflow-.*"}) / kubelet_volume_stats_capacity_bytes{namespace="{{ .Release.Namespace }}", persistentvolumeclaim=~"pgdata-plural-airflow-.*"}
  - name: nodes
    type: nodes
  actions:
  - name: scale
    action: config
    redirectTo: '/'
    configuration:
      updates:
      - path: 
        - airflow
        - postgres
        - resources
        - requests
        - cpu
        valueFrom: cpu
      - path:
        - airflow
        - postgres
        - resources
        - requests
        - memory
        valueFrom: memory
      - path:
        - airflow
        - postgres
        - replicas
        valueFrom: replicas
      - path:
        - airflow
        - postgres
        - storage
        - size
        valueFrom: volume
{{- end }}