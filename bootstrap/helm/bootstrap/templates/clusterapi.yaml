apiVersion: v1
kind: ServiceAccount
metadata:
  name: bootstrap-controller-sa
  labels:
    plural.sh/name: bootstrap-controller
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: bootstrap-controller-role
  labels:
    plural.sh/name: bootstrap-controller
rules:
  - apiGroups: ["bootstrap.plural.sh"]
    resources: ["bootstraps", "bootstraps/status"]
    verbs: ["get", "list", "watch", "update", "create", "delete", "patch"]
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: bootstrap-controller
  labels:
    plural.sh/name: bootstrap-controller
subjects:
  - kind: ServiceAccount
    name: bootstrap-controller-sa
    namespace: bootstrap
roleRef:
  kind: ClusterRole
  name: bootstrap-controller-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: bootstrap-controller
  labels:
    dash.plural.sh/name: bootstrap-controller
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      dash.plural.sh/name: bootstrap-controller
  template:
    metadata:
      labels:
        dash.plural.sh/name: bootstrap-controller
    spec:
      serviceAccountName: bootstrap-controller-sa
      containers:
        - name: bootstrap-controller
          image: zreigz/bootstrap-operator:latest
          args:
            - --namespace=bootstrap
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /tmp
              name: temp
      volumes:
        - name: temp
          emptyDir: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: variables
type: Opaque
data:
  {{ if .Values.bootstrapoperator.secret }}
        {{ toYaml .Values.bootstrapoperator.secret | nindent 2 }}
  {{ end }}

---
apiVersion: bootstrap.plural.sh/v1alpha1
kind: Bootstrap
metadata:
  name: {{ .Values.bootstrapoperator.clusterName }}
spec:
  clusterName: {{ .Values.bootstrapoperator.clusterName }}
  kubernetesVersion: v1.23.14
  clusterNetwork:
    pods:
      cidrBlocks:
        - 192.168.0.0/16
  clusterAPI:
    version: v1.3.5
    components:
      operator:
        managerImage: registry.k8s.io/capi-operator/cluster-api-operator:v0.1.0
        kubeRBACProxyImage: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
  cloudSpec:
    aws:
      region: eu-central-1
      version: v2.0.2
      machinePoolReplicas: 3
      instanceType: t2.large
      accessKeyIdRef:
        name: variables
        key: AWS_ACCESS_KEY_ID
      secretAccessKeyRef:
        name: variables
        key: AWS_SECRET_ACCESS_KEY
      sessionTokenRef:
        name: variables
        key: AWS_SESSION_TOKEN