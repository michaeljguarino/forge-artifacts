# Default values for bootstrap operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

kubernetesVersion: v1.23
clusterAPIVersion: v1.3.5

replicaCount: 1

image:
  controller:
    repository: ghcr.io/pluralsh/bootstrap-controller
    pullPolicy: Always
    tag: sha-933dea1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  controller:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 100Mi
  proxy:
    limits:
      cpu: 100m
      memory: 50Mi
    requests:
      cpu: 100m
      memory: 50Mi

nodeSelector: {}

tolerations: []

affinity: {}

provider: ""

operator:
  clusterName: ""
  skipClusterCreation: true
  secret: {}
  cloud:
    aws:
      enabled: true
      version: v2.0.2
      addons:
        - name: kube-proxy
          version: v1.23.15-eksbuild.1
        - name: vpc-cni
          version: v1.12.5-eksbuild.1
        - name: coredns
          version: v1.8.7-eksbuild.4
      iamServiceAccount:
        serviceAccounts:
        - metadata:
            name: cluster-autoscaler
            namespace: bootstrap
          roleOnly: true
          roleName: cluster-autoscaler
          wellKnownPolicies:
            autoScaler: true
        - metadata:
            name: ebs-csi-controller
            namespace: bootstrap
          roleOnly: true
          roleName: ebs-csi
          wellKnownPolicies:
            ebsCSIController: true
        - metadata:
            name: external-dns
            namespace: bootstrap
          roleOnly: true
          roleName: externaldns
          wellKnownPolicies:
            externalDNS: true
        - metadata:
            name: certmanager
            namespace: bootstrap
          roleOnly: true
          roleName: certmanager
          wellKnownPolicies:
            certManager: true
        - metadata:
            name: alb-operator
            namespace: bootstrap
          roleOnly: true
          roleName: alb
          wellKnownPolicies:
            awsLoadBalancerController: true
        - metadata:
            name: capa-controller-manager
            namespace: bootstrap
          roleOnly: true
          roleName: capa-controller-manager
          attachPolicy:
            Version: "2012-10-17"
            Statement:
            - Action:
              - ec2:AttachNetworkInterface
              - ec2:DetachNetworkInterface
              - ec2:AllocateAddress
              - ec2:AssignIpv6Addresses
              - ec2:AssignPrivateIpAddresses
              - ec2:UnassignPrivateIpAddresses
              - ec2:AssociateRouteTable
              - ec2:AttachInternetGateway
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CreateInternetGateway
              - ec2:CreateEgressOnlyInternetGateway
              - ec2:CreateNatGateway
              - ec2:CreateNetworkInterface
              - ec2:CreateRoute
              - ec2:CreateRouteTable
              - ec2:CreateSecurityGroup
              - ec2:CreateSubnet
              - ec2:CreateTags
              - ec2:CreateVpc
              - ec2:ModifyVpcAttribute
              - ec2:DeleteInternetGateway
              - ec2:DeleteEgressOnlyInternetGateway
              - ec2:DeleteNatGateway
              - ec2:DeleteRouteTable
              - ec2:ReplaceRoute
              - ec2:DeleteSecurityGroup
              - ec2:DeleteSubnet
              - ec2:DeleteTags
              - ec2:DeleteVpc
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeInstances
              - ec2:DescribeInstanceTypes
              - ec2:DescribeInternetGateways
              - ec2:DescribeEgressOnlyInternetGateways
              - ec2:DescribeInstanceTypes
              - ec2:DescribeImages
              - ec2:DescribeNatGateways
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeNetworkInterfaceAttribute
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
              - ec2:DescribeVpcAttribute
              - ec2:DescribeVolumes
              - ec2:DescribeTags
              - ec2:DetachInternetGateway
              - ec2:DisassociateRouteTable
              - ec2:DisassociateAddress
              - ec2:ModifyInstanceAttribute
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:ModifySubnetAttribute
              - ec2:ReleaseAddress
              - ec2:RevokeSecurityGroupIngress
              - ec2:RunInstances
              - ec2:TerminateInstances
              - tag:GetResources
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:ConfigureHealthCheck
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:ApplySecurityGroupsToLoadBalancer
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:RemoveTags
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeInstanceRefreshes
              - ec2:CreateLaunchTemplate
              - ec2:CreateLaunchTemplateVersion
              - ec2:DescribeLaunchTemplates
              - ec2:DescribeLaunchTemplateVersions
              - ec2:DeleteLaunchTemplate
              - ec2:DeleteLaunchTemplateVersions
              - ec2:DescribeKeyPairs
              - ec2:ModifyInstanceMetadataOptions
              Resource:
              - "*"
              Effect: Allow
            - Action:
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:UpdateAutoScalingGroup
              - autoscaling:CreateOrUpdateTags
              - autoscaling:StartInstanceRefresh
              - autoscaling:DeleteAutoScalingGroup
              - autoscaling:DeleteTags
              Resource:
              - arn:*:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/*
              Effect: Allow
            - Condition:
                StringLike:
                  iam:AWSServiceName: autoscaling.amazonaws.com
              Action:
              - iam:CreateServiceLinkedRole
              Resource:
              - arn:*:iam::*:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling
              Effect: Allow
            - Condition:
                StringLike:
                  iam:AWSServiceName: elasticloadbalancing.amazonaws.com
              Action:
              - iam:CreateServiceLinkedRole
              Resource:
              - arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing
              Effect: Allow
            - Condition:
                StringLike:
                  iam:AWSServiceName: spot.amazonaws.com
              Action:
              - iam:CreateServiceLinkedRole
              Resource:
              - arn:*:iam::*:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot
              Effect: Allow
            - Action:
              - iam:PassRole
              Resource:
              - arn:*:iam::*:role/*.cluster-api-provider-aws.sigs.k8s.io
              Effect: Allow
            - Action:
              - secretsmanager:CreateSecret
              - secretsmanager:DeleteSecret
              - secretsmanager:TagResource
              Resource:
              - arn:*:secretsmanager:*:*:secret:aws.cluster.x-k8s.io/*
              Effect: Allow
            # The following are for EKS specifically
            - Action:
              - ssm:GetParameter
              Resource:
              - arn:*:ssm:*:*:parameter/aws/service/eks/optimized-ami/*
              Effect: Allow
            - Condition:
                StringLike:
                  iam:AWSServiceName: eks.amazonaws.com
              Action:
              - iam:CreateServiceLinkedRole
              Resource:
              - arn:*:iam::*:role/aws-service-role/eks.amazonaws.com/AWSServiceRoleForAmazonEKS
              Effect: Allow
            - Condition:
                StringLike:
                  iam:AWSServiceName: eks-nodegroup.amazonaws.com
              Action:
              - iam:CreateServiceLinkedRole
              Resource:
              - arn:*:iam::*:role/aws-service-role/eks-nodegroup.amazonaws.com/AWSServiceRoleForAmazonEKSNodegroup
              Effect: Allow
            - Condition:
                StringLike:
                  iam:AWSServiceName: eks-fargate.amazonaws.com
              Action:
              - iam:CreateServiceLinkedRole
              Resource:
              - arn:aws:iam::*:role/aws-service-role/eks-fargate-pods.amazonaws.com/AWSServiceRoleForAmazonEKSForFargate
              Effect: Allow
            - Action:
              - iam:ListOpenIDConnectProviders
              - iam:GetOpenIDConnectProvider
              - iam:CreateOpenIDConnectProvider
              - iam:AddClientIDToOpenIDConnectProvider
              - iam:UpdateOpenIDConnectProviderThumbprint
              - iam:DeleteOpenIDConnectProvider
              - iam:TagOpenIDConnectProvider
              Resource:
              - "*"
              Effect: Allow
            - Action:
              - iam:GetRole
              - iam:ListAttachedRolePolicies
              - iam:DetachRolePolicy
              - iam:DeleteRole
              - iam:CreateRole
              - iam:TagRole
              - iam:AttachRolePolicy
              Resource:
              - arn:*:iam::*:role/*
              Effect: Allow
            - Action:
              - iam:GetPolicy
              Resource:
              - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
              - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
              - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
              - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
              Effect: Allow
            - Action:
              - eks:DescribeCluster
              - eks:ListClusters
              - eks:CreateCluster
              - eks:TagResource
              - eks:UpdateClusterVersion
              - eks:DeleteCluster
              - eks:UpdateClusterConfig
              - eks:UntagResource
              - eks:UpdateNodegroupVersion
              - eks:DescribeNodegroup
              - eks:DeleteNodegroup
              - eks:UpdateNodegroupConfig
              - eks:CreateNodegroup
              - eks:AssociateEncryptionConfig
              - eks:ListIdentityProviderConfigs
              - eks:AssociateIdentityProviderConfig
              - eks:DescribeIdentityProviderConfig
              - eks:DisassociateIdentityProviderConfig
              Resource:
              - arn:*:eks:*:*:cluster/*
              - arn:*:eks:*:*:nodegroup/*/*/*
              Effect: Allow
            - Action:
              - ec2:AssociateVpcCidrBlock
              - ec2:DisassociateVpcCidrBlock
              - eks:ListAddons
              - eks:CreateAddon
              - eks:DescribeAddonVersions
              - eks:DescribeAddon
              - eks:DeleteAddon
              - eks:UpdateAddon
              - eks:TagResource
              - eks:DescribeFargateProfile
              - eks:CreateFargateProfile
              - eks:DeleteFargateProfile
              Resource:
              - "*"
              Effect: Allow
            - Condition:
                StringEquals:
                  iam:PassedToService: eks.amazonaws.com
              Action:
              - iam:PassRole
              Resource:
              - "*"
              Effect: Allow
            - Condition:
                ForAnyValue:StringLike:
                  kms:ResourceAliases: alias/cluster-api-provider-aws-*
              Action:
              - kms:CreateGrant
              - kms:DescribeKey
              Resource:
              - "*"
              Effect: Allow
      accessKeyIdRef:
        name: variables
        key: AWS_ACCESS_KEY_ID
      secretAccessKeyRef:
        name: variables
        key: AWS_SECRET_ACCESS_KEY
      sessionTokenRef:
        name: variables
        key: AWS_SESSION_TOKEN
      accountIDRef:
        name: variables
        key: AWS_ACCOUNT_ID
    azure:
      enabled: false
    gcp:
      enabled: false
  # Used by Azure
  clientSecret: ""