provider: "" # Can be aws, gcp, azure or kind
## managed or unmanaged, currently only managed is supported
type: managed

cluster:
  ## The name of the cluster
  name: plural
  ## The version of Kubernetes to deploy
  kubernetesVersion: ""
  ## The cidr blocks for pods
  podCidrBlocks:
    - 192.168.0.0/16 # TODO: shouldn't this also be getting propagated to things like what `.Values.cluster.aws.network.vpc.cidrBlock` is setting?
  ## The cidr blocks for services
  serviceCidrBlocks: [] # TODO: check if we should be setting this

  ##################################
  ###         AWS CLUSTER        ###
  ##################################
  aws:
    ## The region to deploy the cluster to
    region: ""
    ## The name of the ssh key to use for the cluster
    sshKeyName: default
    ## The cluster addons to deploy
    addons:
      - conflictResolution: overwrite
        name: kube-proxy
        version: v1.24.15-eksbuild.2
      - conflictResolution: overwrite
        name: vpc-cni
        version: v1.13.4-eksbuild.1
      - conflictResolution: overwrite
        name: coredns
        version: v1.9.3-eksbuild.6

    network:
      # vpc:
      #   id: ""
      #   cidrBlock: ""
      #   # ipv6: # NOTE: setting `ipv6: {}` will enable ipv6 and auto generate the cidr block. Needed for migration.
      #   #   cidrBlock: ""
      #   #   poolId: ""
      #   #   egressOnlyInternetGatewayId: ""
      #   internetGatewayId: ""
      #   tags: {}
      #   availabilityZoneUsageLimit: 3 # TODO: is set to 3 by default
      #   availabilityZoneSelection: Ordered # TODO: How do we deal with people choosing ones manually in the init flow now? Should we only allow number input and always use ordered for the time being? Set by default to Ordered. Can be Ordered or Random
      # subnets: []
      # # - id: ""
      # #   cidrBlock: ""
      # #   ipv6CidrBlock: ""
      # #   availabilityZone: ""
      # #   isPublic: false
      # #   isIpv6: false
      # #   routeTableId: ""
      # #   natGatewayId: ""
      # #   tags: {}
      # cni:
      #   cniIngressRules: []
      #   # - description: ""
      #   #   fromPort: 0
      #   #   toPort: 0
      #   #   protocol: "" # TODO: find valid values. Can be tcp.
      # securityGroupOverrides: {}
    identityRef: {}
    secondaryCidrBlock: ""
    partition: ""
    roleName: ""
    roleAdditionalPolicies: []
    logging:
      apiServer: false
      audit: false
      authenticator: false
      controllerManager: false
      scheduler: false
    encryptionConfig:
      provider: ""
      resources: []
    additionalTags: {}
    iamAuthenticatorConfig:
      mapRoles: []
      # - rolearn: ""
      #   username: ""
      #   groups: []
      mapUsers: []
      # - userarn: ""
      #   username: ""
      #   groups: []
    endpointAccess:
      public: true
      publicCIDRs: []
      private: false
    bastion:
      enabled: false
      disableIngressRules: false
      allowedCIDRBlocks: []
      instanceType: ""
      ami: ""
    tokenMethod: "" # iam-authenticator
    associateOIDCProvider: true
    oidcIdentityProviderConfig: {}
      # clientId: ""
      # groupsClaim: ""
      # groupsPrefix: ""
      # identityProviderConfigName: ""
      # issuerUrl: ""
      # requiredClaims: {}
      # usernameClaim: ""
      # usernamePrefix: ""
      # tags: {}
    vpcCni:
      disable: false
      env: []
      # - name: ""
      #   value: ""
    kubeProxy:
      disable: false

  ###################################
  ###        AZURE CLUSTER        ###
  ###################################
  azure:
    clusterIdentity:
      bootstrapMode: false
      # Credentials for the cluster identity used to bootstrap cluster.
      bootstrapCredentials:
        # Service Principal client ID used during bootstrapping.
        clientID: ""
        # Service Principal password used during bootstrapping.
        clientSecret: ""
      # Settings for the workload identity used by the cluster after bootstrapping.
      workloadIdentity:
        # If the default AzureClusterIdentity should be created.
        enabled: true
        # Name of AzureClusterIdentity to be used when reconciling this cluster.
        name: default
        # Service Principal or User Assigned MSI Client ID.
        clientID: ""
        # Used to identify the namespaces the clusters are allowed to use the identity from.
        # Namespaces can be selected either using an array of namespaces or with label selector.
        # An empty allowedNamespaces object indicates that AzureClusters can use this identity from any namespace.
        # If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
        # A namespace should be either in the NamespaceList or match with Selector to use the identity.
        # Make sure that the namespace this cluster is deployed in is allowed.
        allowedNamespaces: {}
      # Primary tenant ID for the cluster Identity.
      tenantID: ""
      # Name of AzureClusterIdentity to be used when reconciling this cluster.
      # This field is only used when workloadIdentity is disabled and not used during cluster bootstrapping.
      name: ""
    # GUID of the Azure subscription to hold this cluster.
    subscriptionID: ""
    # String matching one of the canonical Azure region names.
    # Examples: westus2, eastus.
    location: ""
    # Name of the Azure resource group for this AKS Cluster.
    resourceGroupName: ""
    # Name of the resource group containing cluster IaaS resources.
    nodeResourceGroupName: ""
    # Describes the vnet for the AKS cluster. Will be created if it does not exist.
    virtualNetwork:
      cidrBlock: 10.1.0.0/16
      name: ""
      subnet:
        cidrBlock: 10.1.0.0/18
        name: plural-subnet
    # Network plugin used for building Kubernetes network.
    # One of: azure, kubenet.
    networkPlugin: azure
    # Network policy used for building Kubernetes network.
    # One of: azure, calico.
    networkPolicy: azure
    # Outbound configuration used by Nodes.
    # One of: loadBalancer, managedNATGateway, userAssignedNATGateway, userDefinedRouting.
    outboundType: ""
    # String literal containing an SSH public key base64 encoded.
    # Use empty value "" to autogenerate new key. Use "skip" value to not set the key.
    sshPublicKey: ""
    # DNSServiceIP is an IP address assigned to the Kubernetes DNS service.
    # It must be within the Kubernetes service address range specified in serviceCidr.
    dnsServiceIP: ""
    # Identity configuration used by the AKS control plane.
    identity:
      # The identity type to use.
      # One of: SystemAssigned, UserAssigned.
      type: SystemAssigned
    # SKU of the AKS to be provisioned.
    sku:
      tier: Paid
    # SKU of the loadBalancer to be provisioned.
    # One of: Basic, Standard.
    loadBalancerSKU: Standard
    # Azure Active Directory configuration to integrate with AKS for AAD authentication.
    aadProfile: {}
    # Profile of the cluster load balancer.
    loadBalancerProfile: {}
    # Access profile for AKS API server.
    apiServerAccessProfile: {}
    # Parameters to be applied to the cluster-autoscaler when enabled.
    autoscalerProfile:
      # Default is false. Changed to true as in old bootstrap.
      balanceSimilarNodeGroups: "true"
      # One of: least-waste, most-pods, priority, random.
      expander: random
      maxEmptyBulkDelete: "10"
      maxGracefulTerminationSec: "600"
      maxNodeProvisionTime: 15m
      maxTotalUnreadyPercentage: "45"
      newPodScaleUpDelay: 0s
      okTotalUnreadyCount: "3"
      scanInterval: 10s
      scaleDownDelayAfterAdd: 10m
      scaleDownDelayAfterDelete: 10s
      scaleDownDelayAfterFailure: 3m
      scaleDownUnneededTime: 10m
      scaleDownUnreadyTime: 20m
      # Default is 0.5. Changed to 0.7 as in old bootstrap.
      scaleDownUtilizationThreshold: "0.7"
      skipNodesWithLocalStorage: "false"
      skipNodesWithSystemPods: "true"
    # Profiles of managed cluster add-on.
    addonProfiles: []

  ###################################
  ###         GCP CLUSTER         ###
  ###################################
  gcp:
    # Project is the id of the project to deploy the cluster to.
    project: ""
    # Region represents the location (region or zone) in which the GKE cluster will be created.
    # Examples: "europe-central2" TODO: add more examples
    region: ""
    # AdditionalLabels is an optional set of tags to add to GCP resources managed by the GCP provider,
    # in addition to the ones added by default.
    additionalLabels:
      managed-by: plural
    # EnableAutopilot indicates whether to enable autopilot for this GKE cluster.
    #
    # Note: Autopilot enabled clusters are not supported at this time.
    enableAutopilot: false
    # EnableWorkloadIdentity allows enabling workload identity during cluster creation when
    # EnableAutopilot is disabled. It allows workloads in your GKE clusters to impersonate
    # Identity and Access Management (IAM) service accounts to access Google Cloud services.
    # Ref: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
    enableWorkloadIdentity: true
    # ReleaseChannel is the release channel of the GKE cluster
    # One of: unspecified, rapid, regular, stable
    releaseChannel: unspecified
    # AddonsConfig is a configuration for the addons that can be automatically spun up in the
    # cluster, enabling additional functionality.
    addonsConfig:
      # HttpLoadBalancingEnabled tracks whether the HTTP Load Balancing controller is enabled in the cluster.
      # When enabled, it runs a small pod in the cluster that manages the load balancers.
      httpLoadBalancingEnabled: true
      # HorizontalPodAutoscalingEnabled tracks whether the Horizontal Pod Autoscaling feature is enabled in the cluster.
      # When enabled, it ensures that metrics are collected into Stackdriver Monitoring.
      horizontalPodAutoscalingEnabled: true
      # NetworkPolicyEnabled tracks whether the addon is enabled or not on the Master,
      # it does not track whether network policy is enabled for the nodes.
      networkPolicyEnabled: false
      # GcpFilestoreCsiDriverEnabled tracks whether the GCP Filestore CSI driver is enabled for this cluster.
      gcpFilestoreCsiDriverEnabled: true
    # Network encapsulates all things related to the GCP network.
    network:
      name: ""
      # AutoCreateSubnetworks: When set to true, the VPC network is created
      # in "auto" mode. When set to false, the VPC network is created in
      # "custom" mode.
      #
      # An auto mode VPC network starts with one subnet per region. Each
      # subnet has a predetermined range as described in Auto mode VPC
      # network IP ranges.
      #
      # Note: Only auto mode is supported at this time.
      autoCreateSubnetworks: true
      # The desired datapath provider for this cluster.
      # One of:
      # - UNSPECIFIED - default value
      # - LEGACY_DATAPATH - uses the IPTables implementation based on kube-proxy
      # - ADVANCED_DATAPATH - uses the eBPF based GKE Dataplane V2 with additional features
      datapathProvider: ADVANCED_DATAPATH
    subnets:
      - name: plural-subnetwork
        # CidrBlock is the range of internal addresses that are owned by this
        # subnetwork. Provide this property when you create the subnetwork. For
        # example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and
        # non-overlapping within a network. Only IPv4 is supported. This field
        # can be set only at resource creation time.
        cidrBlock: 10.0.32.0/20
        # Description is an optional description associated with the resource.
        description: ""
        # SecondaryCidrBlocks defines secondary CIDR ranges,
        # from which secondary IP ranges of a VM may be allocated
        secondaryCidrBlocks: {}
        # PrivateGoogleAccess defines whether VMs in this subnet can access
        # Google services without assigning external IP addresses
        privateGoogleAccess: true
        # EnableFlowLogs: Whether to enable flow logging for this subnetwork.
        # If this field is not explicitly set, it will not appear in get
        # listings. If not set the default behavior is to disable flow logging.
        enableFlowLogs: false
        # Purpose: The purpose of the resource.
        # If unspecified, the purpose defaults to PRIVATE_RFC_1918.
        # The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
        # One of:
        # - INTERNAL_HTTPS_LOAD_BALANCER - Subnet reserved for Internal HTTP(S) Load Balancing.
        # - PRIVATE - Regular user created or automatically created subnet.
        # - PRIVATE_RFC_1918 - Regular user created or automatically created subnet.
        # - PRIVATE_SERVICE_CONNECT - Subnetworks created for Private Service Connect in the producer network.
        # - REGIONAL_MANAGED_PROXY - Subnetwork used for Regional Internal/External HTTP(S) Load Balancing.
        purpose: PRIVATE_RFC_1918

workers:
  defaults:
    #########################################
    ###        AWS WORKER DEFAULTS        ###
    #########################################
    aws:
      replicas: 0
      labels: {}
      annotations:
        cluster.x-k8s.io/replicas-managed-by: external-autoscaler
      isMultiAZ: false # if false, will create a node group per AZ
      spec:
        amiType: AL2_x86_64 # AL2_x86_64, AL2_x86_64_GPU, AL2_ARM_64
        amiVersion: ""
        capacityType: onDemand # onDemand, spot
        diskSize: 50
        instanceType: t3a.large
        roleName: ""
        scaling:
          maxSize: 5
          minSize: 1
        availabilityZones: []
        subnetIDs: []
        labels: {}
        taints: {}
        updateConfig:
          maxUnavailable: 1
          # maxSurge: 1
        additionalTags: {}
        roleAdditionalPolicies: []
    #########################################
    ###       AZURE WORKER DEFAULTS       ###
    #########################################
    azure:
      replicas: 0
      labels: {}
      annotations:
        cluster.x-k8s.io/replicas-managed-by: external-autoscaler
      isMultiAZ: false # if false, will create a node group per AZ
      spec:
        availabilityZones:
        - "1"
        - "2"
        - "3"
        enableNodePublicIP: false
        maxPods: 110
        mode: User
        nodeLabels: {}
        nodePublicIPPrefixID: ""
        osDiskSizeGB: 50
        osDiskType: Managed
        osType: Linux
        scaling:
          maxSize: 5
          minSize: 1
        sku: Standard_D2s_v3
        additionalTags: {}
        taints: {}
        kubeletConfig: {}
        linuxOSConfig: {}
    #########################################
    ###        GCP WORKER DEFAULTS        ###
    #########################################
    gcp:
      replicas: 0
      labels: {}
      annotations:
        cluster.x-k8s.io/replicas-managed-by: external-autoscaler
      isMultiAZ: false # if false, will create a node group per AZ # TODO: false currently unsupported so all node groups set this to true
      spec:
        scaling:
          maxCount: 9
          minCount: 1
        management:
          autoRepair: true
          autoUpgrade: true
        kubernetesLabels:
          plural.sh/capacityType: ON_DEMAND
          plural.sh/performanceType: BURST
        kubernetesTaints: []
        additionalLabels: {}
        providerIDList: []
        machineType: e2-standard-2
        diskSizeGb: 50
        diskType: pd-standard
        spot: false
        preemptible: false
        imageType: COS_CONTAINERD
    #########################################
    ###        Docker WORKER DEFAULTS     ###
    #########################################
    kind:
      replicas: 0
      labels: {}
      annotations:
        cluster.x-k8s.io/replicas-managed-by: external-autoscaler
  #################################
  ###        AWS WORKERS        ###
  #################################
  aws:
    small-burst-spot:
      isMultiAZ: true
      spec:
        labels:
          plural.sh/capacityType: SPOT
          plural.sh/performanceType: BURST
          plural.sh/scalingGroup: small-burst-spot
        additionalTags: { } # TODO: allow this to not be set
        capacityType: spot
        scaling:
          maxSize: 27
          minSize: 0
        taints:
          - effect: no-schedule
            key: plural.sh/capacityType
            value: SPOT
        updateConfig:
          maxUnavailable: 1
    medium-burst-spot:
      isMultiAZ: true
      spec:
        labels:
          plural.sh/capacityType: SPOT
          plural.sh/performanceType: BURST
          plural.sh/scalingGroup: medium-burst-spot
        additionalTags: { } # TODO: allow this to not be set
        capacityType: spot
        instanceType: t3.xlarge
        scaling:
          maxSize: 27
          minSize: 0
        taints:
          - effect: no-schedule
            key: plural.sh/capacityType
            value: SPOT
    large-burst-spot:
      isMultiAZ: true
      spec:
        labels:
          plural.sh/capacityType: SPOT
          plural.sh/performanceType: BURST
          plural.sh/scalingGroup: large-burst-spot
        additionalTags: { } # TODO: allow this to not be set
        instanceType: t3.2xlarge
        capacityType: spot
        scaling:
          maxSize: 27
          minSize: 0
        taints:
          - effect: no-schedule
            key: plural.sh/capacityType
            value: SPOT
    small-burst-on-demand:
      replicas: 1
      spec:
        labels:
          plural.sh/capacityType: ON_DEMAND
          plural.sh/performanceType: BURST
          plural.sh/scalingGroup: small-burst-on-demand
        additionalTags: { } # TODO: allow this to not be set
        scaling:
          maxSize: 1
          minSize: 1
        updateConfig:
          maxUnavailable: 1
    medium-burst-on-demand:
      spec:
        labels:
          plural.sh/capacityType: ON_DEMAND
          plural.sh/performanceType: BURST
          plural.sh/scalingGroup: medium-burst-on-demand
        additionalTags: { } # TODO: allow this to not be set
        instanceType: t3.xlarge
        scaling:
          maxSize: 27
          minSize: 0
    large-burst-on-demand:
      spec:
        labels:
          plural.sh/capacityType: ON_DEMAND
          plural.sh/performanceType: BURST
          plural.sh/scalingGroup: medium-burst-on-demand
        additionalTags: { } # TODO: allow this to not be set
        instanceType: t3.2xlarge
        scaling:
          maxSize: 27
          minSize: 0
  #################################
  ###       AZURE WORKERS       ###
  #################################
  azure:
    lsod:
      spec:
        additionalTags: # TODO: allow this to not be set
          ScalingGroup: large-sustained-on-demand
        enableNodePublicIP: false
        maxPods: 110
        mode: User
        nodeLabels:
          plural.sh/capacityType: ON_DEMAND
          plural.sh/performanceType: SUSTAINED
          plural.sh/scalingGroup: large-sustained-on-demand
        osDiskSizeGB: 50
        osDiskType: Managed
        osType: Linux
        scaling:
          maxSize: 9
          minSize: 0
        sku: Standard_D8as_v5
    lsspot:
      replicas: 0
      isMultiAZ: true
      spec:
        additionalTags: # TODO: allow this to not be set
          ScalingGroup: large-sustained-spot
        enableNodePublicIP: false
        maxPods: 110
        mode: User
        nodeLabels:
          plural.sh/capacityType: SPOT
          plural.sh/performanceType: SUSTAINED
          plural.sh/scalingGroup: large-sustained-spot
        osDiskSizeGB: 50
        osDiskType: Managed
        osType: Linux
        scaleSetPriority: Spot
        scaling:
          maxSize: 9
          minSize: 0
        scaleDownMode: Delete
        spotMaxPrice: -1
        sku: Standard_D8as_v5
        taints:
          - effect: NoSchedule
            key: plural.sh/capacityType
            value: SPOT
          - effect: NoSchedule
            key: kubernetes.azure.com/scalesetpriority
            value: spot
    msod:
      spec:
        additionalTags: # TODO: allow this to not be set
          ScalingGroup: medium-sustained-on-demand
        enableNodePublicIP: false
        maxPods: 110
        mode: User
        nodeLabels:
          plural.sh/capacityType: ON_DEMAND
          plural.sh/performanceType: SUSTAINED
          plural.sh/scalingGroup: medium-sustained-on-demand
        osDiskSizeGB: 50
        osDiskType: Managed
        osType: Linux
        scaling:
          maxSize: 9
          minSize: 0
        sku: Standard_D4as_v5
    msspot:
      isMultiAZ: true
      spec:
        additionalTags: # TODO: allow this to not be set
          ScalingGroup: medium-sustained-spot
        enableNodePublicIP: false
        maxPods: 110
        mode: User
        nodeLabels:
          plural.sh/capacityType: SPOT
          plural.sh/performanceType: SUSTAINED
          plural.sh/scalingGroup: medium-sustained-spot
        osDiskSizeGB: 50
        osDiskType: Managed
        osType: Linux
        scaleSetPriority: Spot
        scaling:
          maxSize: 9
          minSize: 0
        scaleDownMode: Delete
        spotMaxPrice: -1
        sku: Standard_D4as_v5
        taints:
          - effect: NoSchedule
            key: plural.sh/capacityType
            value: SPOT
          - effect: NoSchedule
            key: kubernetes.azure.com/scalesetpriority
            value: spot
    ssod:
      replicas: 1
      spec:
        additionalTags: # TODO: allow this to not be set
          ScalingGroup: small-sustained-on-demand
        enableNodePublicIP: false
        maxPods: 110
        mode: System
        nodeLabels:
          plural.sh/capacityType: ON_DEMAND
          plural.sh/performanceType: SUSTAINED
          plural.sh/scalingGroup: small-sustained-on-demand
        osDiskSizeGB: 50
        osDiskType: Managed
        osType: Linux
        scaling:
          maxSize: 9
          minSize: 1
        sku: Standard_D2as_v5
    ssspot:
      isMultiAZ: true
      spec:
        additionalTags: # TODO: allow this to not be set
          ScalingGroup: small-sustained-spot
        enableNodePublicIP: false
        maxPods: 110
        mode: User
        nodeLabels:
          plural.sh/capacityType: SPOT
          plural.sh/performanceType: SUSTAINED
          plural.sh/scalingGroup: small-sustained-spot
        osDiskSizeGB: 50
        osDiskType: Managed
        osType: Linux
        scaleSetPriority: Spot
        scaling:
          maxSize: 9
          minSize: 0
        scaleDownMode: Delete
        spotMaxPrice: -1
        sku: Standard_D2as_v5
        taints:
          - effect: NoSchedule
            key: plural.sh/capacityType
            value: SPOT
          - effect: NoSchedule
            key: kubernetes.azure.com/scalesetpriority
            value: spot
  #################################
  ###        GCP WORKERS        ###
  #################################
  gcp:
    small-burst-on-demand:
      replicas: 3
      isMultiAZ: true
      spec:
        scaling:
          minCount: 1
          maxCount: 9
        management:
          autoRepair: true
          autoUpgrade: true
        kubernetesLabels:
          plural.sh/scalingGroup: small-burst-on-demand
        additionalLabels: { } # TODO: allow this to not be set
        machineType: e2-standard-2
    medium-burst-on-demand:
      isMultiAZ: true
      spec:
        scaling:
          minCount: 0
          maxCount: 9
        management:
          autoRepair: true
          autoUpgrade: true
        kubernetesLabels:
          plural.sh/scalingGroup: medium-burst-on-demand
        additionalLabels: { } # TODO: allow this to not be set
        machineType: e2-standard-4
    large-burst-on-demand:
      isMultiAZ: true
      spec:
        scaling:
          minCount: 0
          maxCount: 9
        management:
          autoRepair: true
          autoUpgrade: true
        kubernetesLabels:
          plural.sh/scalingGroup: large-burst-on-demand
        additionalLabels: { } # TODO: allow this to not be set
        machineType: e2-standard-8
  #################################
  ###        Docker WORKERS     ###
  #################################
  kind:
    small-burst-0:
      replicas: 2
