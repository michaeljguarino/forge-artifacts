# Default values for notebooks.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  domain: ""
  istioIngressServiceAccount: kubeflow-gateway
  clusterDomain: cluster.local
  userIDHeader: kubeflow-userid
  userIDPrefix: ""
  oidc:
    issuer: ""
    jwksURI: ""
    authEndpoint: ""
    tokenEndpoint: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

webApp:
  replicaCount: 1
  image:
    repository: docker.io/kubeflownotebookswg/jupyter-web-app
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v1.8.0-rc.0

  podAnnotations:
    sidecar.istio.io/inject: "true"
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    port: 80

  virtualService:
    annotations: {}
    prefix: /jupyter
    gateways:
      - kubeflow-gateway
    # hosts to add additional to the value of global.domain
    hosts: []

  resources:
    requests:
      cpu: 200m
      memory: 226Mi
    limits:
      cpu: 200m
      memory: 226Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


  config:
    images:
      allowCustomImage: true
      imagePullPolicy:
        value: IfNotPresent
        readOnly: false
      jupyterImages:
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-scipy:v1.0.55
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-pytorch-full:v1.0.55
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-pytorch-full-cuda:v1.0.55
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-tensorflow-full:v1.0.54
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-tensorflow-full-cuda:v1.0.54
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-go:v1.0.11
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-elixir:v1.0.12
      vscodeImages:
        - ghcr.io/pluralsh/kubeflow-notebooks-codeserver-python:v1.0.8
      rstudioImages:
        - ghcr.io/pluralsh/kubeflow-notebooks-rstudio-tidyverse:v1.0.1
    cpu:
      # CPU for user's Notebook
      value: '0.5'
      # Factor by with to multiply request to calculate limit
      # if no limit is set, to disable set "none"
      limitFactor: "1.2"
      readOnly: false
    memory:
      # Memory for user's Notebook
      value: 1.0Gi
      # Factor by with to multiply request to calculate limit
      # if no limit is set, to disable set "none"
      limitFactor: "1.2"
      readOnly: false
    affinityConfig:
      # If readonly, the default value will be the only option
      # value is a list of `configKey`s that we want to be selected by default
      value: ""
      # The list of available affinity configs
      options:
        - configKey: "GPU-Inf-Small"
          displayName: "GPU Inference Small"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "plural.sh/scalingGroup"
                        operator: "In"
                        values:
                          - "gpu-inf-small-on-demand"
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: "notebook-name"
                        operator: "Exists"
                  namespaces: []
                  topologyKey: "kubernetes.io/hostname"
        - configKey: "GPU-Small"
          displayName: "GPU Small"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "plural.sh/scalingGroup"
                        operator: "In"
                        values:
                          - "gpu-small-on-demand"
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: "notebook-name"
                        operator: "Exists"
                  namespaces: []
                  topologyKey: "kubernetes.io/hostname"
        - configKey: "GPU-Inf-Small-Spot"
          displayName: "GPU Inference Small Spot"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "plural.sh/scalingGroup"
                        operator: "In"
                        values:
                          - "gpu-inf-small-spot"
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: "notebook-name"
                        operator: "Exists"
                  namespaces: []
                  topologyKey: "kubernetes.io/hostname"
        - configKey: "GPU-Small-Spot"
          displayName: "GPU Small Spot"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "plural.sh/scalingGroup"
                        operator: "In"
                        values:
                          - "gpu-small-spot"
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: "notebook-name"
                        operator: "Exists"
                  namespaces: []
                  topologyKey: "kubernetes.io/hostname"
      readOnly: false
    tolerationGroup:
      # The default `groupKey` from the options list
      # If readonly, the default value will be the only option
      value: ""
      # The list of available tolerationGroup configs
      options:
        - groupKey: "spot"
          displayName: "Spot Pool"
          tolerations:
            - key: "plural.sh/capacityType"
              operator: "Equal"
              value: "SPOT"
              effect: "NoSchedule"
        - groupKey: "gpu"
          displayName: "GPU Pool"
          tolerations:
            - key: "nvidia.com/gpu"
              operator: "Exists"
              effect: "NoSchedule"
        - groupKey: "spot-gpu"
          displayName: "GPU Spot Pool"
          tolerations:
            - key: "nvidia.com/gpu"
              operator: "Exists"
              effect: "NoSchedule"
            - key: "plural.sh/capacityType"
              operator: "Equal"
              value: "SPOT"
              effect: "NoSchedule"
      readOnly: false

controller:
  replicaCount: 1
  istio:
    enabled: true
    gateway: kubeflow/kubeflow-gateway
  culling:
    # Scale notebook replicas to 0 after a given idle time (only works for Jupyter based notebook servers)
    enabled: false
    # The frequency in which we check if the Pod needs culling (minutes)
    checkPeriod: 1
    # The idle time after which to cull the notebook (minutes)
    idleTime: 1440 # 1 day
  image:
    repository: docker.io/kubeflownotebookswg/notebook-controller
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v1.8.0-rc.0

  service:
    metrics:
      port: 8080

  podAnnotations:
    sidecar.istio.io/inject: "true"
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources:
    requests:
      cpu: 100m
      memory: 70Mi
    limits:
      cpu: 100m
      memory: 70Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


podDefaults:
  replicaCount: 1
  image:
    repository: docker.io/kubeflownotebookswg/poddefaults-webhook
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v1.8.0-rc.0
  service:
    port: 443

  podAnnotations:
    sidecar.istio.io/inject: "false"
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources:
    requests:
      cpu: 50m
      memory: 50Mi
    limits:
      cpu: 50m
      memory: 50Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
