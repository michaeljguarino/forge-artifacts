---
# Source: pipelines/templates/argo-workflow-controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeflow-pipelines-argo-workflow-controller
  namespace: kubeflow
  labels:
    helm.sh/chart: pipelines-0.1.89
    app: pipelines
    app.kubernetes.io/name: pipelines
    app.kubernetes.io/instance: kubeflow
    app.kubernetes.io/version: "1.8.1"
    version: "1.8.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pipelines-argo
      app.kubernetes.io/name: pipelines-argo
      app.kubernetes.io/instance: kubeflow
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "true"
      labels:
        app: pipelines-argo
        app.kubernetes.io/name: pipelines-argo
        app.kubernetes.io/instance: kubeflow
    spec:
      serviceAccountName: kubeflow-pipelines-argo-workflow-controller
      securityContext: {
        # runAsNonRoot: true # TODO: Fix runAsNonRoot
}
      containers:
        - name: pipelines-argo-workflow-controller
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          image: "gcr.io/ml-pipeline/workflow-controller:v3.2.3-license-compliance"
          imagePullPolicy: IfNotPresent
          args:
            - --configmap
            - kubeflow-pipelines-argo-workflow-controller
            - --executor-image
            - gcr.io/ml-pipeline/argoexec:v3.2.3-license-compliance
          command:
            - workflow-controller
          env:
            - name: LEADER_ELECTION_IDENTITY
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          ports:
            - name: metrics
              containerPort: 9090
              protocol: TCP
            - name: health
              containerPort: 6060
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6060
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 30
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 500Mi
