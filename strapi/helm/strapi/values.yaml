# Default values for strapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: davidspek/strapi
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.1.2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 1337

configOverlays:
- name: strapi-registry
  spec:
    name: Strapi Container Image
    documentation: docker repository to use for strapi deployment (default is davidspek/strapi)
    updates:
      - path: ['strapi', 'strapi', 'image', 'repository']
- name: strapi-cpu
  spec:
    name: Strapi CPU Requests
    documentation: CPU requests for strapi deployment
    updates:
      - path: ['strapi', 'strapi', 'resources', 'requests', 'cpu' ]
- name: strapi-memory
  spec:
    name: Strapi Memory Requests
    documentation: CPU requests for strapi deployment
    updates:
      - path: ['strapi', 'strapi', 'resources', 'requests', 'memory' ]


ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # Extend timeout to allow long running queries.
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

extraEnv: []
# - name: S3_BUCKET_NAME
#   value: strapi
# - name: AWS_REGION
#   value: {{ .Region }}
# - name: S3_URL
#   value: yourBucketName.s3.yourRegion.amazonaws.com

postgres:
  team: plural
  user: strapi
  dbName: strapi
  ownerChart: strapi

database:
  type: postgres
  host: plural-postgres-strapi
  port: 5432
  existingSecret: strapi.plural-postgres-strapi.credentials.postgresql.acid.zalan.do
  userKey: username
  passwordKey: password


secretEnvs:
  APP_KEYS: ""
  API_TOKEN_SALT: ""
  ADMIN_JWT_SECRET: ""
  JWT_SECRET: ""

resources:
  limits:
    memory: 384Mi
  requests:
    cpu: 10m
    memory: 200Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

topologySpreadConstraints: []
