apiVersion: platform.plural.sh/v1alpha1
kind: Runbook
metadata:
  name: scaling-manual
  labels:
    platform.plural.sh/pinned: 'true'
{{ include "mongodb.labels" . | indent 4 }}
spec:
  name: MongoDB Scaling
  description: overview of how to optimally scale your influxdata deployment
  alerts:
  - name: MongoCPU
  - name: MongoMEM
  display: |-
{{ .Files.Get "runbooks/scaling-manual.xml" | indent 4 }}
  datasources:
  - name: mongod-cpu
    type: prometheus
    prometheus:
      format: cpu
      legend: $pod
      query: sum(rate(container_cpu_usage_seconds_total{namespace="{{ .Release.Namespace }}",pod=~"mongo-[0-9]+",container="mongod"}[5m])) by (pod)
  - name: mongod-memory
    type: prometheus
    prometheus:
      format: memory
      legend: $pod
      query: sum(container_memory_working_set_bytes{namespace="{{ .Release.Namespace }}",pod=~"mongo-[0-9]+",container="mongod"}) by (pod)
  - name: mongo-agent-cpu
    type: prometheus
    prometheus:
      format: cpu
      legend: $pod
      query: sum(rate(container_cpu_usage_seconds_total{namespace="{{ .Release.Namespace }}",pod=~"mongo-[0-9]+",container="mongo-agent"}[5m])) by (pod)
  - name: mongo-agent-memory
    type: prometheus
    prometheus:
      format: memory
      legend: $pod
      query: sum(container_memory_working_set_bytes{namespace="{{ .Release.Namespace }}",pod=~"mongo-[0-9]+",container="mongo-agent"}) by (pod)
  - name: mongo
    type: kubernetes
    kubernetes:
      resource: statefulset
      name: mongo
  - name: nodes
    type: nodes
  actions:
  - name: scale
    action: config
    redirectTo: '/'
    configuration:
      updates:
      - path: 
        - mongodb-community
        - containers
        - mongod
        - resources
        - requests
        - cpu
        valueFrom: mongo-cpu
      - path:
        - mongodb-community
        - containers
        - mongod
        - resources
        - requests
        - cpu
        valueFrom: mongo-memory
---
apiVersion: platform.plural.sh/v1alpha1
kind: Runbook
metadata:
  name: volume-scaling
  labels:
    platform.plural.sh/pinned: 'true'
{{ include "mongodb.labels" . | indent 4 }}
spec:
  name: Mongodb Volume Scaling
  description: overview of how to optimally scale your influxdata persistent volumes
  alerts:
  - name: MongoVolumeFull
  display: |-
{{ .Files.Get "runbooks/volume-scaling.xml" | indent 4 }}
  datasources:
  - name: mongo-volume
    type: prometheus
    prometheus:
      format: none
      legend: $persistentvolumeclaim
      query: (kubelet_volume_stats_capacity_bytes{namespace="{{ .Release.Namespace }}", persistentvolumeclaim=~"data-volume-mongo-.*"} - kubelet_volume_stats_available_bytes{namespace="{{ .Release.Namespace }}", persistentvolumeclaim=~"data-volume-mongo-.*"}) / kubelet_volume_stats_capacity_bytes{namespace="{{ .Release.Namespace }}", persistentvolumeclaim=~"data-volume-mongo-.*"}
  - name: mongo
    type: kubernetes
    kubernetes:
      resource: statefulset
      name: mongo
  actions:
  - name: volume-scale
    action: config
    redirectTo: '/'
    configuration:
      statefulSets:
      - name: mongodb
        persistentVolume: data-volume
        valueFrom: mongo-storage
      updates:
      - path: 
        - mongodb-community
        - statefulset
        - storage
        - size
        valueFrom: mongo-storage
