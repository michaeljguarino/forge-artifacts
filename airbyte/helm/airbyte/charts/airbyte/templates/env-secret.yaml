apiVersion: v1
kind: Secret
metadata:
  name: airbyte-env
stringData:
  AIRBYTE_VERSION: {{ .Values.version | default .Chart.AppVersion }}
  API_URL: {{ .Values.webapp.api.url }}
  AWS_ACCESS_KEY_ID: {{ .Values.minio.accessKey.password | quote }}
  AWS_SECRET_ACCESS_KEY: {{ .Values.minio.secretKey.password | quote }}
  STATE_STORAGE_MINIO_ACCESS_KEY: {{ .Values.minio.accessKey.password | quote }}
  STATE_STORAGE_MINIO_SECRET_ACCESS_KEY: {{ .Values.minio.secretKey.password | quote }}
  STATE_STORAGE_S3_ACCESS_KEY: {{ .Values.minio.accessKey.password | quote }}
  STATE_STORAGE_S3_SECRET_ACCESS_KEY: {{ .Values.minio.secretKey.password | quote }}
  CONFIG_ROOT: /configs
  DATA_DOCKER_MOUNT: airbyte_data
  DATABASE_DB: {{ include "airbyte.database.name" . }}
  DATABASE_HOST: {{ include "airbyte.database.host" . }}
  DATABASE_PORT: {{ include "airbyte.database.port" . | quote }}
  DATABASE_URL: {{ include "airbyte.database.url" . | quote }}
  DATABASE_USER: {{ include "airbyte.database.user" . }}
  DB_DOCKER_MOUNT: airbyte_db
  FULLSTORY: {{ ternary "enabled" "disabled" .Values.webapp.fullstory.enabled }}
  {{ if and .Values.airbyteS3Bucket .Values.airbyteS3Endpoint }}
  STATE_STORAGE_MINIO_BUCKET_NAME: {{ .Values.airbyteS3Bucket | quote }}
  {{ else if .Values.airbyteGCSBucket }}
  STATE_STORAGE_GCS_BUCKET_NAME: {{ .Values.airbyteGCSBucket | quote }}
  {{ else }}
  STATE_STORAGE_S3_BUCKET_NAME: {{ .Values.airbyteS3Bucket | quote }}
  {{ end }}
  GCS_LOG_BUCKET: {{ default "" .Values.airbyteGCSBucket | quote }}
  {{ if .Values.airbyteGCSBucket }}
  GCP_STORAGE_BUCKET: {{ default "" .Values.airbyteGCSBucket | quote }}
  {{ end }}
  GOOGLE_APPLICATION_CREDENTIALS: {{ default "" .Values.googleApplicationCredentials | quote }}
  INTERNAL_API_HOST: {{ include "common.names.fullname" . }}-server:{{ .Values.server.service.port }}
  IS_DEMO: {{ ternary "true" "false" .Values.webapp.isDemo | quote }}
  LOCAL_ROOT: /tmp/airbyte_local
  {{ if .Values.resourceConf }}
  RESOURCE_CPU_LIMIT: {{ default "" .Values.resourceConf.limit.cpu | quote }}
  RESOURCE_CPU_REQUEST: {{ default "" .Values.resourceConf.request.cpu | quote }}
  RESOURCE_MEMORY_LIMIT: {{ default "" .Values.resourceConf.limit.memory | quote }}
  RESOURCE_MEMORY_REQUEST: {{ default "" .Values.resourceConf.request.memory | quote }}
  {{ else }}
  RESOURCE_CPU_LIMIT: ""
  RESOURCE_CPU_REQUEST: ""
  RESOURCE_MEMORY_LIMIT: ""
  RESOURCE_MEMORY_REQUEST: ""
  {{ end }}
  {{- if $.Values.global.jobs.kube.annotations }}
  JOB_KUBE_ANNOTATIONS: {{ $.Values.global.jobs.kube.annotations | include "airbyte.flattenMap" | quote }}
  {{- end }}
  {{- if $.Values.global.jobs.kube.nodeSelector }}
  JOB_KUBE_NODE_SELECTORS: {{ $.Values.global.jobs.kube.nodeSelector | include "airbyte.flattenMap" | quote }}
  {{- end }}
  {{- if $.Values.global.jobs.kube.tolerations }}
  JOB_KUBE_TOLERATIONS: {{ $.Values.global.jobs.kube.tolerations | include "airbyte.flattenArrayMap" | quote }}
  {{- end }}
  JOB_MAIN_CONTAINER_CPU_LIMIT: {{ ((.Values.global.jobs.resources | default dict).limits | default dict).cpu | default "" | quote }}
  JOB_MAIN_CONTAINER_CPU_REQUEST: {{ ((.Values.global.jobs.resources | default dict).requests | default dict).cpu | default "" | quote }}
  JOB_MAIN_CONTAINER_MEMORY_LIMIT: {{ ((.Values.global.jobs.resources | default dict).limits | default dict).memory | default "" | quote }}
  JOB_MAIN_CONTAINER_MEMORY_REQUEST: {{ ((.Values.global.jobs.resources | default dict).requests | default dict).memory | default "" | quote }}
  {{- if $.Values.global.jobs.kube.main_container_image_pull_secret }}
  JOB_KUBE_MAIN_CONTAINER_IMAGE_PULL_SECRET: {{ $.Values.global.jobs.kube.main_container_image_pull_secret }}
  {{- end }}
  RUN_DATABASE_MIGRATION_ON_STARTUP: "true"
  S3_LOG_BUCKET: {{ default "" .Values.airbyteS3Bucket | quote }}
  S3_LOG_BUCKET_REGION: {{ default "" .Values.airbyteS3Region | quote }}
  {{ if .Values.airbyteS3Region }}
  STATE_STORAGE_S3_REGION: {{ .Values.airbyteS3Region | quote }}
  STATE_STORAGE_S3_BUCKET_REGION: {{ .Values.airbyteS3Region | quote }}
  {{ end }}
  {{ if .Values.airbyteS3Endpoint }}
  STATE_STORAGE_MINIO_ENDPOINT: {{ .Values.airbyteS3Endpoint | quote }}
  S3_MINIO_ENDPOINT: {{ .Values.airbyteS3Endpoint | quote }}
  {{ else }}
  S3_MINIO_ENDPOINT: ''
  {{ end }}
  S3_PATH_STYLE_ACCESS: "true"
  SUBMITTER_NUM_THREADS: "10"
  TEMPORAL_HOST: {{ include "common.names.fullname" . }}-temporal:{{ .Values.temporal.service.port }}
  TEMPORAL_WORKER_PORTS: 9001,9002,9003,9004,9005,9006,9007,9008,9009,9010,9011,9012,9013,9014,9015,9016,9017,9018,9019,9020,9021,9022,9023,9024,9025,9026,9027,9028,9029,9030,9031,9032,9033,9034,9035,9036,9037,9038,9039,9040
  TRACKING_STRATEGY: segment
  WEBAPP_URL: http://{{ include "common.names.fullname" . }}-webapp:{{ .Values.webapp.service.port }}
  WORKER_ENVIRONMENT: kubernetes
  WORKSPACE_DOCKER_MOUNT: airbyte_workspace
  WORKSPACE_ROOT: /workspace
  WORKERS_MICRONAUT_ENVIRONMENTS: "control-plane"
  CRON_MICRONAUT_ENVIRONMENTS: "control-plane"
  JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION: '0.29.15.001'
  CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION: '0.35.15.001'
  ACTIVITY_MAX_ATTEMPT: ""
  ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS: ""
  ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS: ""
  WORKFLOW_FAILURE_RESTART_DELAY_SECONDS: ""
  USE_STREAM_CAPABLE_STATE: "true"
  CONTAINER_ORCHESTRATOR_ENABLED: {{ .Values.worker.containerOrchestrator.enabled | quote }}
  CONTAINER_ORCHESTRATOR_IMAGE: {{ .Values.worker.containerOrchestrator.image | quote }}
  WORKER_LOGS_STORAGE_TYPE: {{ .Values.global.logs.storage.type | quote }}
  WORKER_STATE_STORAGE_TYPE:  {{ .Values.global.state.storage.type | quote }}
  SHOULD_RUN_NOTIFY_WORKFLOWS: "false"
  MAX_NOTIFY_WORKERS: "5"
  LOG_LEVEL: INFO
{{ if .Values.extraEnv }}
{{ range $env := .Values.extraEnv }}
  {{ $env.name }}: {{ $env.value | quote }}
{{ end }}
{{ end }}
