apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airbyte.fullname" . }}-scheduler
  labels:
    {{- include "airbyte.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.scheduler.replicaCount }}
  selector:
    matchLabels:
      airbyte: scheduler
  template:
    metadata:
      labels:
        airbyte: scheduler
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/env-secret.yaml") . | sha256sum }}
      {{- if .Values.scheduler.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.scheduler.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.tolerations "context" $) | nindent 8 }}
      {{- end }}
      initContainers:
      - name: wait-for-pg
        image: gcr.io/pluralsh/busybox:latest
        imagePullPolicy: IfNotPresent
        command: [ "/bin/sh", "-c", "until nc -zv {{ include "airbyte.database.host" . }} 5432 -w1; do echo 'waiting for db'; sleep 1; done" ]
      containers:
      - name: airbyte-scheduler-container
        image: {{ include "airbyte.schedulerImage" . }}
        imagePullPolicy: "{{ .Values.scheduler.image.pullPolicy }}"        
        envFrom:
        - secretRef:
            name: airbyte-env
        env:
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "airbyte.postgresql.secretName" . }}
              key: {{ include "airbyte.database.existingsecret.key" . }}
        {{- if .Values.scheduler.extraEnv }}
        {{ .Values.scheduler.extraEnv | toYaml | nindent 8 }}
        {{- end }}
        {{- if .Values.scheduler.resources }}
        resources: {{- toYaml .Values.scheduler.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: gcs-log-creds-volume
          mountPath: /secrets/gcs-log-creds
          readOnly: true
      volumes:
      - name: gcs-log-creds-volume
        secret:
          secretName: {{ default "gcs-log-creds" .Values.gcpCredentialsSecret }}
