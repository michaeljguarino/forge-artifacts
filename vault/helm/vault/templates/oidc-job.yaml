{{- if .Values.oidc.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-oidc-script
  labels:
  {{ include "vault-plural.labels" . | nindent 4 }}
data:
  vault-oidc.sh: |
    set -euo pipefail

    echo "Waiting for vault to be Ready"
    kubectl wait --for=condition=Ready -n {{ .Release.Namespace }} --timeout 10m pod/vault-0

    echo "Runing script to login in to Vault"
    kubectl exec -n {{ .Release.Namespace }} -i vault-0 -c vault -- sh /vault/scripts/login.sh

    echo "Ensuring admin policy is up to date"
    kubectl exec -n {{ .Release.Namespace }} -i vault-0 -c vault -- sh /vault/scripts/write-admin-policy.sh

    echo "Running script to enable OIDC"
    kubectl exec -n {{ .Release.Namespace }} -i vault-0 -c vault -- sh /vault/scripts/enable-oidc.sh
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-oidc
  labels:
  {{ include "vault-plural.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: vault-init-sa
      containers:
      - name: kubectl
        image: dkr.plural.sh/bootstrap/bitnami/kubectl:1.23.6
        command: [bash, /scripts/vault-oidc.sh]
        volumeMounts:
        - name: oidc-script
          mountPath: /scripts
          readOnly: true
      volumes:
      - name: oidc-script
        configMap:
          name: vault-oidc-script
          defaultMode: 0777
{{- end }}
